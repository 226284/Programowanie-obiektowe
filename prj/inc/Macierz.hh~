#ifndef MACIERZ_HH
#define MACIERZ_HH

#include "rozmiar.h"
#include "Wektor.hh"
#include <iostream>


class Macierz
{
  unsigned int Rozmiar;
  Wektor K[ROZMIAR];
  element_t Wyznacznik;

public:

  //Konstruktor nadający podstawowe parametry
  Macierz () {Rozmiar = ROZMIAR; Wyznacznik = 0;}
  
  //Operator () pozwala na swobodne poruszanie się po elementach macierzy
  const element_t & operator () (const unsigned int r, const unsigned int c) const { return K[c][r]; }
  element_t & operator () (const unsigned int r, const unsigned int c) { return K[c][r]; }
  
  //Operator [] pozwala na swobodne poruszanie się po kolumnach macierzy
  const Wektor & operator [] (unsigned int Kol) const { return K[Kol]; }
  Wektor & operator [] (unsigned int Kol) { return K[Kol]; }
  
  //Ustawianie rozmiaru
  void set_rozmiar (unsigned int rozm) { Rozmiar = rozm; }
  unsigned int const get_rozmiar () const { return Rozmiar; }

  //Ustawianie wyznacznika
  element_t set_wyznacznik (element_t wyzn) { Wyznacznik = wyzn; return Wyznacznik;}
  element_t get_wyznacznik () { return Wyznacznik; }
  
};

//Strumienie wejścia/wyjścia dla macierzy
std::istream & operator >> (std::istream &Strm, Macierz &Mac);

std::ostream & operator << (std::ostream &Strm, const Macierz &Mac);


//Czasem zdarza się, że wyznacznik nie do końca jest równy 0
//wynika to z faktu iż kompilator nie zaokrągla bardzo małych liczb typu float
//funkcja ta zaokrągla wyznacznik jeżeli jest on -0.001 < W < 0.001
element_t sprawdz_wyzn (element_t wyzn);

//Funkcja wczytuje macierz a następnie liczy jej wyznacznik
element_t wyznacznik (Macierz m);


#endif
